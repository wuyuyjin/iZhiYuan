{"version":3,"file":"admitLogin-7ae84f43.js","sources":["../../../../pages/Login/admitLogin.vue"],"sourcesContent":["<template>\r\n\r\n  <n-card title=\"i志愿管理员登录\" class=\"container mx-auto box-border h-96 w-96 login rounded-lg\">\r\n    <n-space vertical>\r\n      <n-form\r\n          ref=\"formRef\"\r\n          label-placement=\"left\"\r\n          :label-width=\"50\"\r\n          @submit=\"onSubmit\"\r\n      >\r\n        <n-form-item label=\"email\" path=\"email\">\r\n          <NInput\r\n              v-model:value=\"email\"\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              name=\"email\"\r\n          />\r\n        </n-form-item>\r\n        <div class=\"text-xs text-red-700\">{{ errors.email }}</div>\r\n        <n-form-item label=\"密码\" path=\"password\">\r\n          <NInput\r\n              v-model:value=\"password\"\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n          />\r\n\r\n        </n-form-item>\r\n        <div class=\"text-xs text-red-700\">{{ errors.password }}</div>\r\n        <br/>\r\n        <button class=\"bg-green-500/100 rounded-lg w-1/4 h-10 text-white\">\r\n          登录\r\n        </button>\r\n      </n-form>\r\n    </n-space>\r\n    <template #action>\r\n      <n-space justify=\"space-between\">\r\n        <NuxtLink to=\"/Login/login\">用户登录</NuxtLink>\r\n        <NuxtLink to=\"/Login/register\">用户注册</NuxtLink>\r\n        <NuxtLink to=\"/Login/admitRegister\">管理员注册</NuxtLink>\r\n        <NuxtLink to=\"/Login/forgetPass\">忘记密码？</NuxtLink>\r\n      </n-space>\r\n    </template>\r\n  </n-card>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport {toTypedSchema} from \"@vee-validate/zod\";\r\nimport {useField, useForm} from 'vee-validate';\r\nimport * as zod from 'zod'\r\nimport api from \"~/api/api\";\r\nimport axios from \"axios\";\r\nimport {useSquareStore} from \"~/stores/squareStore\";\r\nimport {useType} from \"~/stores/type\";\r\n\r\nconst formRef = ref(null)\r\nconst validationSchema = toTypedSchema(\r\n    zod.object({\r\n      email: zod.string().nonempty('This is required').email({message: '请输入正确的邮箱格式'}),\r\n      password: zod.string().nonempty('This is required').min(6, {message: '密码至少需要6位'}),\r\n    })\r\n)\r\n\r\n\r\nconst {handleSubmit, errors} = useForm({\r\n  validationSchema,\r\n});\r\n\r\nconst {value: email} = useField('email');\r\nconst {value: password} = useField('password');\r\nconst router = useRouter()\r\n\r\nconst onSubmit = handleSubmit(values => {\r\n  // alert(JSON.stringify(values, null, 2));\r\n  // alert(\"email=\"+email.value)\r\n\r\n  // 登录\r\n  const config = {\r\n    email: email.value,\r\n    password: password.value\r\n  }\r\n  axios.post(api + '/Admin/login', config)\r\n      .then(response => {\r\n        console.log(111111)\r\n        // console.log(response.data)\r\n        sessionStorage.setItem('token',response.data.data.token)\r\n        sessionStorage.setItem('type',response.data.data.type)\r\n        useType().type.type = response.data.data.type\r\n        // console.log(sessionStorage.getItem('type'))\\\r\n        console.log('type='+useType().type.type)\r\n        // console.log(sessionStorage.getItem('token'))\r\n        // console.log(response)\r\n        router.push({path: '/FunctionalArea/square'})\r\n        // alert(12121212112121)\r\n      })\r\n      .catch(errors => {\r\n        console.log(errors)\r\n        console.log(121212)\r\n      })\r\n  // router.push({path: '/FunctionalArea/square'})\r\n\r\n  // 获取首页信息\r\n  axios.get(api+'/Activity/search')\r\n      .then(response => {\r\n        console.log(1111)\r\n        console.log(response)\r\n        useSquareStore().squareStore = response.data.data\r\n        console.log(useSquareStore().squareStore)\r\n      })\r\n      .catch(errors => {\r\n        console.log(3333)\r\n        console.log(errors)\r\n      })\r\n});\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  margin-top: 100px;\r\n  text-align: center;\r\n}\r\n</style>"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuDA,UAAA,UAAA,IAAA,IAAA;AACA,UAAA,mBAAA;AAAA,MAAyB,IAAA,OAAA;AAAA,QACV,OAAA,IAAA,OAAA,EAAA,SAAA,kBAAA,EAAA,MAAA,EAAA,SAAA,cAAA;AAAA,QACqE,UAAA,IAAA,OAAA,EAAA,SAAA,kBAAA,EAAA,IAAA,GAAA,EAAA,SAAA,WAAA,CAAA;AAAA,MACE,CAAA;AAAA,IACjF;AAIL,UAAA,EAAA,cAAA,OAAA,IAAA,QAAA;AAAA,MAAuC;AAAA,IACrC,CAAA;AAGF,UAAA,EAAA,OAAA,MAAA,IAAA,SAAA,OAAA;AACA,UAAA,EAAA,OAAA,SAAA,IAAA,SAAA,UAAA;AACA,UAAA,SAAA;AAEA,UAAA,WAAA,aAAA,CAAA,WAAA;AAKE,YAAA,SAAA;AAAA,QAAe,OAAA,MAAA;AAAA,QACA,UAAA,SAAA;AAAA,MACM;AAErB,YAAA,KAAA,MAAA,gBAAA,MAAA,EAAA,KAAA,CAAA,aAAA;AAEM,gBAAA,IAAA,MAAA;AAEA,uBAAA,QAAA,SAAA,SAAA,KAAA,KAAA,KAAA;AACA,uBAAA,QAAA,QAAA,SAAA,KAAA,KAAA,IAAA;AACA,gBAAA,EAAA,KAAA,OAAA,SAAA,KAAA,KAAA;AAEA,gBAAA,IAAA,UAAA,QAAA,EAAA,KAAA,IAAA;AAGA,eAAA,KAAA,EAAA,MAAA,yBAAA,CAAA;AAAA,MAA4C,CAAA,EAAA,MAAA,CAAA,YAAA;AAI5C,gBAAA,IAAA,OAAA;AACA,gBAAA,IAAA,MAAA;AAAA,MAAkB,CAAA;AAKxB,YAAA,IAAA,MAAA,kBAAA,EAAA,KAAA,CAAA,aAAA;AAEM,gBAAA,IAAA,IAAA;AACA,gBAAA,IAAA,QAAA;AACA,uBAAA,EAAA,cAAA,SAAA,KAAA;AACA,gBAAA,IAAA,eAAA,EAAA,WAAA;AAAA,MAAwC,CAAA,EAAA,MAAA,CAAA,YAAA;AAGxC,gBAAA,IAAA,IAAA;AACA,gBAAA,IAAA,OAAA;AAAA,MAAkB,CAAA;AAAA,IACnB,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}