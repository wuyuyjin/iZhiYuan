{"version":3,"file":"admitRegister-d337bc16.js","sources":["../../../../pages/Login/admitRegister.vue"],"sourcesContent":["<template>\r\n  <n-card title=\"i志愿管理员注册\" class=\"container mx-auto box-border h-96 w-96 login rounded-lg\">\r\n    <n-space vertical>\r\n      <n-form\r\n          ref=\"formRef\"\r\n          label-placement=\"left\"\r\n          :label-width=\"70\"\r\n          @submit=\"onSubmit\"\r\n      >\r\n        <n-form-item label=\"email\" path=\"email\">\r\n          <NInput\r\n              v-model:value=\"email\"\r\n              placeholder=\"Email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n          />\r\n        </n-form-item>\r\n        <div class=\"text-sm text-red-700\">{{ errors.email }}</div>\r\n        <n-form-item label=\"密码\" path=\"password\">\r\n          <NInput\r\n              v-model:value=\"password\"\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n          />\r\n        </n-form-item>\r\n        <div class=\"text-sm text-red-700\">{{ errors.password }}</div>\r\n        <n-form-item label=\"确认密码\" path=\"password\">\r\n          <NInput\r\n              v-model:value=\"confirmPassword\"\r\n              placeholder=\"confirmPassword\"\r\n              type=\"password\"\r\n              name=\"confirmPassword\"\r\n          />\r\n        </n-form-item>\r\n        <div class=\"text-sm text-red-700\">{{ errors.confirmPassword }}</div>\r\n        <n-form-item path=\"Code\" label=\"验证码\">\r\n          <NInput\r\n              v-model:value=\"Code\"\r\n              placeholder=\"请输入4位验证码\"\r\n              type=\"text\"\r\n              name=\"Code\"\r\n          />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          <NButton type=\"info\" @click=\"sendCode\" class=\"rounded-lg\">发送验证码</NButton>\r\n        </n-form-item>\r\n\r\n        <div class=\"text-sm text-red-700\">{{ errors.Code }}</div>\r\n        <button class=\"bg-green-500/100 rounded-lg w-1/4 h-10 text-white\">\r\n          注册\r\n        </button>\r\n      </n-form>\r\n    </n-space>\r\n    <template #action>\r\n      <n-space justify=\"space-between\">\r\n        <NuxtLink to=\"/Login/login\">用户登录</NuxtLink>\r\n        <NuxtLink to=\"/Login/admitLogin\">管理员登录</NuxtLink>\r\n        <NuxtLink to=\"/Login/register\">用户注册</NuxtLink>\r\n        <NuxtLink to=\"/Login/forgetPass\">忘记密码？</NuxtLink>\r\n      </n-space>\r\n    </template>\r\n  </n-card>\r\n  <slot/>\r\n</template>\r\n\r\n<script setup>\r\nimport  {toTypedSchema} from \"@vee-validate/zod\";\r\nimport {useField, useForm} from 'vee-validate';\r\nimport * as zod from 'zod'\r\nimport axios from \"axios\";\r\nimport api from \"~/api/api\";\r\n// import {useMessage} from \"naive-ui\";\r\n\r\nconst formRef = ref(null)\r\nconst validationSchema = toTypedSchema(\r\n    zod.object({\r\n      email: zod.string().nonempty('This is required').email({message: 'Must be a valid email'}),\r\n      password: zod.string().nonempty('This is required').min(6, {message: 'Too short'}),\r\n      confirmPassword: zod.string().nonempty('This is required').min(6, {message: 'Too short'}),\r\n      Code: zod.string().nonempty('This is required').min(4, {message: '请输入四位验证码'})\r\n    })\r\n)\r\n\r\n\r\nconst {handleSubmit, errors} = useForm({\r\n  validationSchema,\r\n});\r\nconst router = useRouter()\r\n\r\nconst {value: email} = useField('email');\r\nconst {value: password} = useField('password');\r\nconst {value: confirmPassword} = useField('confirmPassword');\r\nconst {value: Code} = useField('Code')\r\n\r\nfunction sendCode() {\r\n  const config = {\r\n    email: email.value\r\n  }\r\n  if (email.value === '') {\r\n    alert(\"请先输入邮箱！\")\r\n  } else {\r\n    axios.get(api+'/captcha?email='+email.value)\r\n        .then(response => {\r\n          console.log(response)\r\n          alert('发送成功')\r\n        })\r\n        .catch(errors => {\r\n          console.log(errors)\r\n          alert('发送失败')\r\n        })\r\n  }\r\n\r\n  alert('email='+email.value)\r\n}\r\n\r\nconst onSubmit = handleSubmit(values => {\r\n  if (password.value === confirmPassword.value) {\r\n    // alert(JSON.stringify(values, null, 4));\r\n    axios.post(api+'/Admin/register',{\r\n      email: email.value,\r\n      password: password.value,\r\n      Code: Code.value\r\n    }).then(response => {\r\n      console.log(response)\r\n      alert('注册成功')\r\n      router.push({path: '/Login/login'})\r\n    }).catch(errors => {\r\n      console.log(errors)\r\n      alert('注册失败')\r\n    })\r\n  } else {\r\n    alert(\"两次输入的密码不一样，请重新输入密码\")\r\n  }\r\n});\r\n\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.login {\r\n  margin-top: 100px;\r\n  text-align: center;\r\n}\r\n</style>"],"names":["errors"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,UAAA,UAAA,IAAA,IAAA;AACA,UAAA,mBAAA;AAAA,MACA,IAAA,OAAA;AAAA,QACA,OAAA,IAAA,OAAA,EAAA,SAAA,kBAAA,EAAA,MAAA,EAAA,SAAA,wBAAA,CAAA;AAAA,QACA,UAAA,IAAA,OAAA,EAAA,SAAA,kBAAA,EAAA,IAAA,GAAA,EAAA,SAAA,YAAA,CAAA;AAAA,QACA,iBAAA,IAAA,OAAA,EAAA,SAAA,kBAAA,EAAA,IAAA,GAAA,EAAA,SAAA,YAAA,CAAA;AAAA,QACA,MAAA,IAAA,OAAA,EAAA,SAAA,kBAAA,EAAA,IAAA,GAAA,EAAA,SAAA,WAAA,CAAA;AAAA,MACA,CAAA;AAAA,IACA;AAGA,UAAA,EAAA,cAAA,OAAA,IAAA,QAAA;AAAA,MACA;AAAA,IACA,CAAA;AACA,UAAA,SAAA,UAAA;AAEA,UAAA,EAAA,OAAA,MAAA,IAAA,SAAA,OAAA;AACA,UAAA,EAAA,OAAA,SAAA,IAAA,SAAA,UAAA;AACA,UAAA,EAAA,OAAA,gBAAA,IAAA,SAAA,iBAAA;AACA,UAAA,EAAA,OAAA,KAAA,IAAA,SAAA,MAAA;AAEA,aAAA,WAAA;AACA,OAAA;AAAA,QACA,OAAA,MAAA;AAAA,MACA;AACA,UAAA,MAAA,UAAA,IAAA;AACA,cAAA,SAAA;AAAA,MACA,OAAA;AACA,cAAA,IAAA,MAAA,oBAAA,MAAA,KAAA,EACA,KAAA,cAAA;AACA,kBAAA,IAAA,QAAA;AACA,gBAAA,MAAA;AAAA,QACA,CAAA,EACA,MAAA,CAAAA,YAAA;AACA,kBAAA,IAAAA,OAAA;AACA,gBAAA,MAAA;AAAA,QACA,CAAA;AAAA,MACA;AAEA,YAAA,WAAA,MAAA,KAAA;AAAA,IACA;AAEA,UAAA,WAAA,aAAA,YAAA;AACA,UAAA,SAAA,UAAA,gBAAA,OAAA;AAEA,cAAA,KAAA,MAAA,mBAAA;AAAA,UACA,OAAA,MAAA;AAAA,UACA,UAAA,SAAA;AAAA,UACA,MAAA,KAAA;AAAA,QACA,CAAA,EAAA,KAAA,cAAA;AACA,kBAAA,IAAA,QAAA;AACA,gBAAA,MAAA;AACA,iBAAA,KAAA,EAAA,MAAA,eAAA,CAAA;AAAA,QACA,CAAA,EAAA,MAAA,CAAAA,YAAA;AACA,kBAAA,IAAAA,OAAA;AACA,gBAAA,MAAA;AAAA,QACA,CAAA;AAAA,MACA,OAAA;AACA,cAAA,o}